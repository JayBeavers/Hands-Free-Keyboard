using System.ComponentModel;
using System.Xml.Serialization;

namespace Microsoft.HandsFree.Keyboard.Controls.Layout
{
    /// <summary>
    /// Character generating key.
    /// </summary>
    public class CharacterKeyLayout : NonGapKeyLayout
    {
        /// <summary>
        /// Caption when keyboard is shifted. By default the uppercase version of Caption.
        /// </summary>
        [XmlAttribute]
        public string ShiftCaption { get; set; }

        /// <summary>
        /// The value generated by pressing the key.
        /// </summary>
        [XmlAttribute]
        public string Value { get; set; }

        /// <summary>
        /// Value generated by key. By default the same value as ShiftCaption generates.
        /// </summary>
        [XmlAttribute]
        public string ShiftValue { get; set; }

        /// <summary>
        /// Vocalisation for unshifted key.
        /// </summary>
        [XmlAttribute]
        public string Vocal { get; set; }

        /// <summary>
        /// Vocalisation for shifted key.
        /// </summary>
        [XmlAttribute]
        public string ShiftVocal { get; set; }

        /// <summary>
        /// Is the label to be struckthrough.
        /// </summary>
        [XmlAttribute]
        public bool IsStrikethrough { get; set; }

        /// <summary>
        /// Should hints be shown.
        /// </summary>
        [XmlAttribute]
        [DefaultValue(true)]
        public bool ShowHints { get; set; } = true;

        internal override void Layout(ILayoutContext context, double left, double top, double width, double height)
        {
            context.CreateCharacterKey(this, left, top, width, height);
        }
    }
}
